[{"C:\\Users\\Jeramelle\\Desktop\\github uploads\\react-tutorial\\dojo-blog\\src\\index.js":"1","C:\\Users\\Jeramelle\\Desktop\\github uploads\\react-tutorial\\dojo-blog\\src\\App.js":"2","C:\\Users\\Jeramelle\\Desktop\\github uploads\\react-tutorial\\dojo-blog\\src\\Navbar.js":"3","C:\\Users\\Jeramelle\\Desktop\\github uploads\\react-tutorial\\dojo-blog\\src\\Home.js":"4","C:\\Users\\Jeramelle\\Desktop\\github uploads\\react-tutorial\\dojo-blog\\src\\Create.js":"5","C:\\Users\\Jeramelle\\Desktop\\github uploads\\react-tutorial\\dojo-blog\\src\\BlogList.js":"6","C:\\Users\\Jeramelle\\Desktop\\github uploads\\react-tutorial\\dojo-blog\\src\\useFetch.js":"7","C:\\Users\\Jeramelle\\Desktop\\github uploads\\react-tutorial\\dojo-blog\\src\\BlogDetails.js":"8"},{"size":447,"mtime":1652693521208,"results":"9","hashOfConfig":"10"},{"size":651,"mtime":1653226604889,"results":"11","hashOfConfig":"10"},{"size":430,"mtime":1652693521207,"results":"12","hashOfConfig":"10"},{"size":503,"mtime":1652780408834,"results":"13","hashOfConfig":"10"},{"size":2111,"mtime":1653225310009,"results":"14","hashOfConfig":"10"},{"size":486,"mtime":1653232236584,"results":"15","hashOfConfig":"10"},{"size":1642,"mtime":1653225570815,"results":"16","hashOfConfig":"10"},{"size":1675,"mtime":1653231776856,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1c1eucy",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\Users\\Jeramelle\\Desktop\\github uploads\\react-tutorial\\dojo-blog\\src\\index.js",[],["37","38"],"C:\\Users\\Jeramelle\\Desktop\\github uploads\\react-tutorial\\dojo-blog\\src\\App.js",[],"C:\\Users\\Jeramelle\\Desktop\\github uploads\\react-tutorial\\dojo-blog\\src\\Navbar.js",[],"C:\\Users\\Jeramelle\\Desktop\\github uploads\\react-tutorial\\dojo-blog\\src\\Home.js",[],"C:\\Users\\Jeramelle\\Desktop\\github uploads\\react-tutorial\\dojo-blog\\src\\Create.js",["39"],"import { useState } from \"react\"; // hook\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [author, setAuthor] = useState('luigi');\r\n  const [isPending, setIsPending] = useState(false);\r\n  // const history = useHistory(); // use to go back to history\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = e => {\r\n      e.preventDefault(); \r\n      const blog = {title, body, author};\r\n        \r\n      setIsPending(true);\r\n\r\n      fetch('http://localhost:8000/blogs', {\r\n        method: 'POST', /// post reques\r\n        headers: {'Content-Type': 'application/json'}, ///telling the server the type of content we're sending\r\n        body: JSON.stringify(blog)  /// body the actual data we're sending\r\n      }).then(() => {\r\n        console.log('new blog has been added');\r\n        setIsPending(false);\r\n        // history.push('/'); /// after we added the data we go back \r\n        navigate(\"/\");\r\n      })    \r\n  }\r\n\r\n  return (\r\n    <div className=\"create\">\r\n      <h2>Add a New Blog</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"\">Title:</label>\r\n        <input \r\n          type=\"text\" \r\n          required\r\n          value = {title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n\r\n        <label htmlFor=\"\">Blog Body:</label>\r\n        <textarea name=\"\" id=\"\"\r\n          required \r\n          value={body}\r\n          onChange={(e) => setBody(e.target.value)}\r\n        ></textarea>\r\n\r\n        <label htmlFor=\"\">Blog Author:</label>\r\n        <select name=\"\" id=\"\" \r\n          value={author}\r\n          onChange = {(e) => setAuthor(e.target.value)}\r\n        >\r\n          <option value=\"mario\">Mario</option>\r\n          <option value=\"luigi\">Luigi</option>\r\n        </select>\r\n        \r\n        {!isPending && <button >Add Blog</button>}\r\n        {isPending && <button disabled>Adding Blog...</button>}\r\n        <p>{title}</p>\r\n        <p>{body}</p>\r\n        <p>{author}</p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Create;","C:\\Users\\Jeramelle\\Desktop\\github uploads\\react-tutorial\\dojo-blog\\src\\BlogList.js",[],"C:\\Users\\Jeramelle\\Desktop\\github uploads\\react-tutorial\\dojo-blog\\src\\useFetch.js",[],"C:\\Users\\Jeramelle\\Desktop\\github uploads\\react-tutorial\\dojo-blog\\src\\BlogDetails.js",["40","41","42"],"import { useParams, useNavigate, Routes, Route, Link} from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Home from \"./Home\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst BlogDetails = () => {\r\n    const { id } = useParams();  // get the id\r\n    const {data: blog, isPending, error} = useFetch(' http://localhost:8000/blogs/'+id);\r\n    const navigate = useNavigate();\r\n    const [show, setShow] = useState(false);\r\n    // const history = useHistory();\r\n    // const {path} = useRouteMatch(); \r\n\r\n    function handleDelete(){\r\n        fetch('http://localhost:8000/blogs/'+blog.id,{\r\n            method: 'DELETE'\r\n        }).then(() => {\r\n            // history.push('/');\r\n            navigate(\"/\");\r\n        })\r\n    }\r\n    const handleShow = () => {\r\n        if(show){\r\n           setShow(false);\r\n           console.log('false');\r\n        }else{\r\n           setShow(true);\r\n           console.log('false');\r\n        }\r\n    }\r\n\r\n\r\n    return (  \r\n        <div className=\"blog-details\">\r\n            { isPending && <div>Loading...</div>}\r\n            { error && {error}}\r\n            {blog && (\r\n                <div>\r\n                   <article>\r\n                        <h2>{ blog.title }</h2>\r\n                        <p>Written by:{ blog.author }</p>\r\n                        <div>{blog.body}</div>\r\n                        <button onClick={handleDelete}>Delete</button>\r\n                    </article> \r\n                    <button onClick={handleShow}>click to see the other bloglist</button>\r\n                    {show && <Home/> }\r\n                    \r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BlogDetails;",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":10,"nodeType":"49","messageId":"50","endLine":2,"endColumn":18},{"ruleId":"47","severity":1,"message":"51","line":1,"column":34,"nodeType":"49","messageId":"50","endLine":1,"endColumn":40},{"ruleId":"47","severity":1,"message":"52","line":1,"column":42,"nodeType":"49","messageId":"50","endLine":1,"endColumn":47},{"ruleId":"47","severity":1,"message":"53","line":1,"column":49,"nodeType":"49","messageId":"50","endLine":1,"endColumn":53},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]